{"version":3,"file":"static/js/45.4e2062e9.chunk.js","mappings":"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","sources":["components/services/api.js","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'de598b8a73d0faf19e596baca4221ad4';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    language: 'en-US',\n    api_key: API_KEY,\n  },\n});\n\nexport const fetchRequestTrending = async () => {\n  const { data } = await instance.get(`trending/all/day`);\n  return data;\n};\n\nexport const fetchRequestSearch = async query => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query: query,\n      include_adult: false,\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const fetchRequestMovieDetails = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const fetchRequestCast = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/credits`);\n  return data;\n};\n\nexport const fetchRequestReviews = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/reviews`, {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchRequestCast } from \"components/services/api\";\n\nexport const Cast = () => {\n    const { movieId } = useParams();\n    const [castData, setCastData] = useState(null);\n\n    useEffect(() => {\n        if (!movieId) {\n            return;\n        }\n        const fetchCast = async () => {\n            try {\n                const result = await fetchRequestCast(movieId);\n                setCastData(result);\n            } catch (error) {\n                console.error(error);\n            }\n        };\n        fetchCast();\n    }, [movieId]);\n\n    return (\n        <div>\n            {castData ?\n                <ul >\n                    {castData.cast.map(cast => (\n                        <li key={cast.id}>\n                            <img src={`https://image.tmdb.org/t/p/w185${cast.profile_path}`} alt={cast.name} />\n                            <p>{cast.name}</p>\n                        </li>\n                    ))}\n                </ul> : null}\n        </div>\n    );\n};\n\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchRequestReviews } from \"components/services/api\";\n\nexport const Reviews = () => {\n    const { movieId } = useParams();\n    const [reviewsData, setReviewsData] = useState(null);\n\n    useEffect(() => {\n        if (!movieId) {\n            return;\n        }\n        const fetchReviews = async () => {\n            try {\n                const result = await fetchRequestReviews(movieId);\n                setReviewsData(result);\n                console.log(result);\n            } catch (error) {\n                console.error(error);\n            }\n        };\n        fetchReviews();\n    }, [movieId]);\n\n    return (\n        <div>\n            {!reviewsData || reviewsData.results.length === 0 ? (\n                <p>We don't have any reviews for this movie.</p>\n            ) : (\n                <ul>\n                    {reviewsData.results.map(review => (\n                        <li key={review.id}>\n                            <p>Author: {review.author}</p>\n                            <p>{review.content}</p>\n                        </li>\n                    ))}\n                </ul>\n            )}\n\n        </div>\n    );\n};","import { fetchRequestMovieDetails } from 'components/services/api';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Link, Route, Routes, useLocation, useParams } from 'react-router-dom';\nimport css from './Style.module.css'\nimport { Cast } from 'components/Cast/Cast';\nimport { Reviews } from 'components/Reviews/Reviews';\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movieData, setMovieData] = useState(null);\n    const location = useLocation();\n    const backLinkRef = useRef(location?.state?.from ?? '/');\n\n\n    useEffect(() => {\n        if (!movieId) {\n            return;\n        }\n        const fetchMoviesById = async () => {\n            try {\n                const result = await fetchRequestMovieDetails(movieId);\n                setMovieData(result);\n            } catch (error) {\n                console.error(error);\n            }\n        };\n        fetchMoviesById();\n    }, [movieId]);\n\n    const userScore = Math.floor(movieData?.vote_average * 10);\n    const genres = movieData?.genres?.map(genre => genre.name)?.join(', ');\n    const releaseDate = movieData?.release_date?.slice(0, 4);\n\n    return (\n        <div >\n            <Link className={css.movieDetailsBtn} to={backLinkRef.current}>&#129044; Go back</Link>\n            {movieData ?\n                <div className={css.movieDetailsWrap}>\n                    <div>\n                        <img className={css.movieDetailsImg} src={`https://image.tmdb.org/t/p/w342${movieData.poster_path}`} alt={movieData.title} />\n                    </div>\n                    <div>\n                        <h1>{movieData.title} ({releaseDate})</h1>\n                        <p>User score: {userScore}%</p>\n                        <h2>Overview</h2>\n                        <p>{movieData.overview}</p>\n                        <h3>Genres</h3>\n                        <p>{genres}</p>\n                    </div>\n                </div> : null}\n            <div>\n                <p>Additional information</p>\n                <Link to='cast'>Cast</Link>\n                <Link to='reviews'>Reviews</Link>\n            </div>\n            <Routes>\n                <Route path='cast' element={<Cast />} />\n                <Route path='reviews' element={<Reviews />} />\n            </Routes>\n        </div >\n    );\n};\n\nexport default MovieDetails;"],"names":["instance","axios","baseURL","params","language","api_key","fetchRequestTrending","get","data","fetchRequestSearch","query","include_adult","page","fetchRequestMovieDetails","movie_id","fetchRequestCast","fetchRequestReviews","Cast","movieId","useParams","useState","castData","setCastData","useEffect","fetchCast","result","console","error","cast","map","src","profile_path","alt","name","id","Reviews","reviewsData","setReviewsData","fetchReviews","log","results","length","review","author","content","movieData","setMovieData","location","useLocation","backLinkRef","useRef","state","from","fetchMoviesById","userScore","Math","floor","vote_average","genres","genre","join","releaseDate","release_date","slice","className","css","to","current","poster_path","title","overview","path","element"],"sourceRoot":""}