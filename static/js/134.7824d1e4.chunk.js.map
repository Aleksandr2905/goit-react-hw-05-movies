{"version":3,"file":"static/js/134.7824d1e4.chunk.js","mappings":"sSAKMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAJe,+BAKfC,OAAQ,CACNC,SAAU,QACVC,QANY,sCAUHC,EAAoB,mCAAG,sGACXN,EAASO,IAAT,oBADW,uBAC1BC,EAD0B,EAC1BA,KAD0B,kBAE3BA,GAF2B,2CAAH,qDAKpBC,EAAkB,mCAAG,WAAMC,GAAN,yFACTV,EAASO,IAAT,gBAA8B,CACnDJ,OAAQ,CACNO,MAAOA,EACPC,eAAe,EACfC,KAAM,KALsB,uBACxBJ,EADwB,EACxBA,KADwB,kBAQzBA,GARyB,2CAAH,sDAWlBK,EAAwB,mCAAG,WAAMC,GAAN,yFACfd,EAASO,IAAT,iBAAuBO,IADR,uBAC9BN,EAD8B,EAC9BA,KAD8B,kBAE/BA,GAF+B,2CAAH,sDAKxBO,EAAgB,mCAAG,WAAMD,GAAN,yFACPd,EAASO,IAAT,iBAAuBO,EAAvB,aADO,uBACtBN,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBQ,EAAmB,mCAAG,WAAMF,GAAN,yFACVd,EAASO,IAAT,iBAAuBO,EAAvB,YAA2C,CAChEX,OAAQ,CACNS,KAAM,KAHuB,uBACzBJ,EADyB,EACzBA,KADyB,kBAM1BA,GAN0B,2CAAH,qD,0HCmBhC,UArDe,WACb,OAAwCS,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCC,EAAAA,EAAAA,MAAlC,eAAOjB,EAAP,KAAekB,EAAf,KACMC,EAAanB,EAAOI,IAAI,SACxBgB,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,mCAAG,WAAMC,GAAN,iEACnBA,EAAMC,iBACNN,EAAgB,CAAEX,MAAOgB,EAAME,cAAcC,SAASC,WAAWC,QAF9C,2CAAH,sDAoBlB,OAfAC,EAAAA,EAAAA,YAAU,WACR,GAAmB,OAAfV,EAAJ,CAGA,IAAMW,EAAkB,mCAAG,gHAEGxB,EAAAA,EAAAA,IAAmBa,GAFtB,gBAEfY,EAFe,EAEfA,QACRf,EAAgBe,GAHO,gDAKvBC,QAAQC,MAAR,MALuB,yDAAH,qDAQxBH,GATC,CAUF,GAAE,CAACX,KAGF,4BACE,kBAAMe,SAAUZ,EAAhB,WACE,kBACEa,KAAK,aACLC,KAAK,OACLC,YAAY,2BACZC,aAAcnB,KAEhB,mBAAQiB,KAAK,SAAb,SAAsB,eAExB,eAAIG,UAAWC,EAAAA,EAAAA,UAAf,SACGzB,EAAa0B,KAAI,SAAAC,GAAK,OACrB,SAAC,KAAD,CAEEC,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAM1B,GACfpB,OAAQ,CAAE+C,QAASL,EAAME,IAJ3B,SAMGF,EAAMM,OAASN,EAAMP,MALjBO,EAAME,GAFQ,QAa9B,C","sources":["components/services/api.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'de598b8a73d0faf19e596baca4221ad4';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    language: 'en-US',\n    api_key: API_KEY,\n  },\n});\n\nexport const fetchRequestTrending = async () => {\n  const { data } = await instance.get(`trending/all/day`);\n  return data;\n};\n\nexport const fetchRequestSearch = async query => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query: query,\n      include_adult: false,\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const fetchRequestMovieDetails = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const fetchRequestCast = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/credits`);\n  return data;\n};\n\nexport const fetchRequestReviews = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/reviews`, {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchRequestSearch } from 'components/services/api';\nimport css from './Style.module.css'\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [params, setSearchParams] = useSearchParams();\n  const queryParam = params.get('query');\n  const location = useLocation();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setSearchParams({ query: event.currentTarget.elements.searchWord.value });\n  };\n\n  useEffect(() => {\n    if (queryParam === null) {\n      return;\n    }\n    const fetchMoviesByTitle = async () => {\n      try {\n        const { results } = await fetchRequestSearch(queryParam);\n        setSearchMovies(results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMoviesByTitle();\n  }, [queryParam]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          name=\"searchWord\"\n          type=\"text\"\n          placeholder=\"Enter search for a movie\"\n          defaultValue={queryParam}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul className={css.movieList}>\n        {searchMovies.map(movie => (\n          <Link\n            key={movie.id}\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n            params={{ movieId: movie.id }}\n          >\n            {movie.title || movie.name}\n          </Link>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["instance","axios","baseURL","params","language","api_key","fetchRequestTrending","get","data","fetchRequestSearch","query","include_adult","page","fetchRequestMovieDetails","movie_id","fetchRequestCast","fetchRequestReviews","useState","searchMovies","setSearchMovies","useSearchParams","setSearchParams","queryParam","location","useLocation","handleSubmit","event","preventDefault","currentTarget","elements","searchWord","value","useEffect","fetchMoviesByTitle","results","console","error","onSubmit","name","type","placeholder","defaultValue","className","css","map","movie","to","id","state","from","movieId","title"],"sourceRoot":""}