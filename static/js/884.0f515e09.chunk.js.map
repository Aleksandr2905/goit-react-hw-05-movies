{"version":3,"file":"static/js/884.0f515e09.chunk.js","mappings":"sSAKMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAJe,+BAKfC,OAAQ,CACNC,SAAU,QACVC,QANY,sCAUHC,EAAoB,mCAAG,sGACXN,EAASO,IAAT,oBADW,uBAC1BC,EAD0B,EAC1BA,KAD0B,kBAE3BA,GAF2B,2CAAH,qDAKpBC,EAAkB,mCAAG,WAAMC,GAAN,yFACTV,EAASO,IAAT,gBAA8B,CACnDJ,OAAQ,CACNO,MAAOA,EACPC,eAAe,EACfC,KAAM,KALsB,uBACxBJ,EADwB,EACxBA,KADwB,kBAQzBA,GARyB,2CAAH,sDAWlBK,EAAwB,mCAAG,WAAMC,GAAN,yFACfd,EAASO,IAAT,iBAAuBO,IADR,uBAC9BN,EAD8B,EAC9BA,KAD8B,kBAE/BA,GAF+B,2CAAH,sDAKxBO,EAAgB,mCAAG,WAAMD,GAAN,yFACPd,EAASO,IAAT,iBAAuBO,EAAvB,aADO,uBACtBN,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBQ,EAAmB,mCAAG,WAAMF,GAAN,yFACVd,EAASO,IAAT,iBAAuBO,EAAvB,YAA2C,CAChEX,OAAQ,CACNS,KAAM,KAHuB,uBACzBJ,EADyB,EACzBA,KADyB,kBAM1BA,GAN0B,2CAAH,qD,mIC/B1BS,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IACZC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IA4DrB,UA1DqB,WAAO,IAAD,UACfE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,iBAACH,QAAD,IAACA,GAAD,UAACA,EAAUI,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,MAGpDC,EAAAA,EAAAA,YAAU,WACN,GAAKX,EAAL,CAGA,IAAMY,EAAe,mCAAG,8GAEKnB,EAAAA,EAAAA,IAAyBO,GAF9B,OAEVa,EAFU,OAGhBT,EAAaS,GAHG,gDAKhBC,QAAQC,MAAR,MALgB,yDAAH,qDAQrBH,GATC,CAUJ,GAAE,CAACZ,IAEJ,IAAMgB,EAAYC,KAAKC,MAAgC,IAAjB,OAATf,QAAS,IAATA,OAAA,EAAAA,EAAWgB,eAClCC,EAAM,OAAGjB,QAAH,IAAGA,GAAH,UAAGA,EAAWiB,cAAd,iBAAG,EAAmBC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,WAA/B,aAAG,EAA6CC,KAAK,MAC3DC,EAAW,OAAGtB,QAAH,IAAGA,GAAH,UAAGA,EAAWuB,oBAAd,aAAG,EAAyBC,MAAM,EAAG,GAEtD,OACI,iBAAKC,UAAWC,EAAAA,EAAAA,sBAAhB,WACI,SAAC,KAAD,CAAMD,UAAWC,EAAAA,EAAAA,gBAAqBC,GAAIvB,EAAYwB,QAAtD,SAA+D,yBAC9D5B,GACG,iBAAKyB,UAAWC,EAAAA,EAAAA,iBAAhB,WACI,0BACI,gBAAKD,UAAWC,EAAAA,EAAAA,gBAAqBG,IAAG,yCAAoC7B,EAAU8B,aAAeC,IAAK/B,EAAUgC,WAExH,iBAAKP,UAAWC,EAAAA,EAAAA,iBAAhB,WACI,gBAAID,UAAWC,EAAAA,EAAAA,kBAAf,UAAuC1B,EAAUgC,MAAM,KAAGV,EAAY,QACtE,eAAGG,UAAWC,EAAAA,EAAAA,kBAAd,UAAqC,eAAab,EAAU,QAC5D,eAAIY,UAAWC,EAAAA,EAAAA,0BAAf,SAA8C,cAC9C,cAAGD,UAAWC,EAAAA,EAAAA,yBAAd,SAA6C1B,EAAUiC,YACvD,eAAIR,UAAWC,EAAAA,EAAAA,wBAAf,SAA4C,YAC5C,cAAGD,UAAWC,EAAAA,EAAAA,uBAAd,SAA2CT,UAE1C,MACb,iBAAKQ,UAAWC,EAAAA,EAAAA,sBAAhB,WACI,eAAID,UAAWC,EAAAA,EAAAA,2BAAf,SAA+C,4BAC/C,SAAC,KAAD,CAAMD,UAAWC,EAAAA,EAAAA,WAAgBC,GAAG,OAApC,SAA2C,UAC3C,SAAC,KAAD,CAAMF,UAAWC,EAAAA,EAAAA,WAAgBC,GAAG,UAApC,SAA8C,gBAElD,SAAC,EAAAO,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAAC3C,EAAD,OAC5B,SAAC,KAAD,CAAO0C,KAAK,UAAUC,SAAS,SAACzC,EAAD,aAKlD,C","sources":["components/services/api.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'de598b8a73d0faf19e596baca4221ad4';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    language: 'en-US',\n    api_key: API_KEY,\n  },\n});\n\nexport const fetchRequestTrending = async () => {\n  const { data } = await instance.get(`trending/all/day`);\n  return data;\n};\n\nexport const fetchRequestSearch = async query => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query: query,\n      include_adult: false,\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const fetchRequestMovieDetails = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const fetchRequestCast = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/credits`);\n  return data;\n};\n\nexport const fetchRequestReviews = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/reviews`, {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n","import { fetchRequestMovieDetails } from 'components/services/api';\nimport React, { useEffect, useRef, useState, lazy, Suspense } from 'react';\nimport { Link, Route, Routes, useLocation, useParams } from 'react-router-dom';\nimport css from './Style.module.css'\nimport { Loader } from 'components/Loader/Loader';\n\n// import { Cast } from 'components/Cast/Cast';\n// import { Reviews } from 'components/Reviews/Reviews';\nconst Cast = lazy(() => import('components/Cast/Cast'));\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movieData, setMovieData] = useState(null);\n    const location = useLocation();\n    const backLinkRef = useRef(location?.state?.from ?? '/');\n\n\n    useEffect(() => {\n        if (!movieId) {\n            return;\n        }\n        const fetchMoviesById = async () => {\n            try {\n                const result = await fetchRequestMovieDetails(movieId);\n                setMovieData(result);\n            } catch (error) {\n                console.error(error);\n            }\n        };\n        fetchMoviesById();\n    }, [movieId]);\n\n    const userScore = Math.floor(movieData?.vote_average * 10);\n    const genres = movieData?.genres?.map(genre => genre.name)?.join(', ');\n    const releaseDate = movieData?.release_date?.slice(0, 4);\n\n    return (\n        <div className={css.movieDetailsContainer}>\n            <Link className={css.movieDetailsBtn} to={backLinkRef.current}>&#129044; Go back</Link>\n            {movieData ?\n                <div className={css.movieDetailsWrap}>\n                    <div>\n                        <img className={css.movieDetailsImg} src={`https://image.tmdb.org/t/p/w342${movieData.poster_path}`} alt={movieData.title} />\n                    </div>\n                    <div className={css.movieDetailsText}>\n                        <h1 className={css.movieDetailsTitle}>{movieData.title} ({releaseDate})</h1>\n                        <p className={css.movieDetailsScore}>User score: {userScore}%</p>\n                        <h2 className={css.movieDetailsOverviewTitle}>Overview</h2>\n                        <p className={css.movieDetailsOverviewText}>{movieData.overview}</p>\n                        <h3 className={css.movieDetailsGenresTitle}>Genres</h3>\n                        <p className={css.movieDetailsGenresText}>{genres}</p>\n                    </div>\n                </div> : null}\n            <div className={css.additionalInformation}>\n                <h4 className={css.movieDetailsAdditionalText}>Additional information</h4>\n                <Link className={css.additional} to='cast'>Cast</Link>\n                <Link className={css.additional} to='reviews'>Reviews</Link>\n            </div>\n            <Suspense fallback={<Loader />}>\n                <Routes>\n                    <Route path='cast' element={<Cast />} />\n                    <Route path='reviews' element={<Reviews />} />\n                </Routes>\n            </Suspense>\n        </div >\n    );\n};\n\nexport default MovieDetails;"],"names":["instance","axios","baseURL","params","language","api_key","fetchRequestTrending","get","data","fetchRequestSearch","query","include_adult","page","fetchRequestMovieDetails","movie_id","fetchRequestCast","fetchRequestReviews","Cast","lazy","Reviews","movieId","useParams","useState","movieData","setMovieData","location","useLocation","backLinkRef","useRef","state","from","useEffect","fetchMoviesById","result","console","error","userScore","Math","floor","vote_average","genres","map","genre","name","join","releaseDate","release_date","slice","className","css","to","current","src","poster_path","alt","title","overview","Suspense","fallback","path","element"],"sourceRoot":""}